[project]
name = "autograph"
version = "0.1.0"
description = "AutoGraph - Automated Knowledge Graph Generation Framework"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    # Core Knowledge Graph and Database
    "neo4j>=5.15.0",
    "py2neo>=2021.2.4",
    "neomodel>=5.3.0",
    # Natural Language Processing
    "spacy>=3.7.0",
    "transformers>=4.35.0",
    "torch>=2.1.0",
    "huggingface-hub>=0.19.0",
    "nltk>=3.8.1",
    # Data Processing and Analysis
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "scikit-learn>=1.3.0",
    # Web Scraping and Data Extraction
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "scrapy>=2.11.0",
    # Configuration and Environment
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "click>=8.1.0",
    # Workflow and Task Management
    "prefect>=2.14.0",
    "celery>=5.3.0",
    # API and LLM Integration
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "httpx>=0.25.0",
    # Embeddings and Similarity
    "sentence-transformers>=2.2.0",
    "faiss-cpu>=1.7.4",
    # Visualization and Monitoring
    "matplotlib>=3.8.0",
    "plotly>=5.17.0",
    "networkx>=3.2.0",
    # Testing and Quality
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "aiofiles>=24.1.0",
    "fastapi>=0.116.1",
    "uvicorn>=0.35.0",
    "python-multipart>=0.0.20",
    "aiohttp>=3.12.14",
    "protobuf>=6.31.1",
    "tiktoken>=0.9.0",
    "sentencepiece>=0.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
]

docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
autograph = "autograph.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/autograph"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE.md",
]

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["autograph"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=autograph",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
